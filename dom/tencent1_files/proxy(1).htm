<!DOCTYPE html>
<!-- saved from url=(0045)http://t.web2.qq.com/proxy.html?v=20110331001 -->
<html><script type="text/javascript" src="chrome-extension://khbjahpecnkenngkidhioicnfpakihgo/iframe_raw.js"></script><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <title>EQQ Proxy for t.qq</title>
<style type="text/css"></style><style id="stylish-4" class="stylish" type="text/css">* {cursor: url(http://cur.cursors-4u.net/cursors/cur-9/cur815.png), default!important}</style><style type="text/css">object,embed{-webkit-animation-duration:.001s;-webkit-animation-name:playerInserted;-ms-animation-duration:.001s;-ms-animation-name:playerInserted;-o-animation-duration:.001s;-o-animation-name:playerInserted;animation-duration:.001s;animation-name:playerInserted;}@-webkit-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}@-ms-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}@-o-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}@keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}</style></head>
<body>
<script>
    document.domain = "qq.com";
    
    
    // 兼容不同浏览器的 Adapter 适配层
    if(typeof window.XMLHttpRequest === "undefined"){
        window.XMLHttpRequest = function(){
            return new window.ActiveXObject(navigator.userAgent.indexOf("MSIE 5") >=0 ? "Microsoft.XMLHTTP" : "Msxml2.XMLHTTP");
        };
    }
    
    
    /**
     * 这是Ajax对象名字空间的一个方法
     * 
     * @memberOf Http
     * @method  ajax
     * 
     * @param {Object} options 一个配置对象
     * @return {Object} ajax 返回一个ajax对象
     */
    var ajax = function(uri, options){
        var httpRequest,
            httpSuccess,
            timeout,
            isTimeout = false,
            isComplete = false;
        
        options = {
            method: options.method || "GET",
            data: options.data || null,
            arguments: options.arguments || null,

            onSuccess: options.onSuccess || function(){},
            onError: options.onError || function(){},
            onComplete: options.onComplete || function(){},
            //尚未测试
            onTimeout: options.onTimeout || function(){},

            isAsync: options.isAsync || true,
            timeout: options.timeout ? options.timeout : 30000,
            contentType: options.contentType ? options.contentType : "utf-8",
            type: options.type || "xml"
        };
        uri = uri || "",
        timeout = options.timeout;
        
        
        
        httpRequest = new window.XMLHttpRequest();
        
        httpRequest.open(options.method, uri, options.isAsync);
        //设置编码集
        //httpRequest.setRequestHeader('Content-Type','application/x-www-form-urlencoded');
        httpRequest.setRequestHeader("Content-Type",options.contentType);

        /**
         * @ignore
         */
        httpSuccess=function(r){
            try{
                return (!r.status && location.protocol == "file:")
                    || (r.status>=200 && r.status<300)
                    || (r.status==304)
                    || (navigator.userAgent.indexOf("Safari")>-1 && typeof r.status=="undefined");
            }catch(e){}
            return false;
        }
        
        //httpRequest.UPDATE_TIME_STAMP = "20110331001";
        httpRequest.onreadystatechange=function (){
            if(httpRequest.readyState==4){
                if(!isTimeout){
                    var o={};
                        o.responseText = httpRequest.responseText;
                        o.responseXML = httpRequest.responseXML;
                        o.uri=uri;
                        o.arguments=options.arguments;
                        o.status= httpRequest.status;
                        o.data = options.data;
                        
                    if(httpSuccess(httpRequest)){
                        if(options.type === "script"){
                            eval.call(window, data);
                        }
                        try{
                            if(options && options.onSuccess){
                                options.onSuccess(o);
                            }
                            
                        }catch(e){}
                        
                        
                    }else{
                        
                        try{
                            options.onError(o);
                        }catch(e){}
                    }
                    
                    try{
                        options.onComplete(o);
                    }catch(e){}
                }
                isComplete = true;
                //删除对象,防止内存溢出
                httpRequest = null;
            }
        };
        
        httpRequest.send(options.data);
        
        window.setTimeout(function(){
            var o;
            if(!isComplete){
                isTimeout = true;
                o={};
                o.uri=uri;
                o.arguments=options.arguments;
                if(httpRequest){
                    httpRequest.abort();
                    httpRequest = null;
                }
                try{
                    options.onTimeout(o);
                    options.onComplete(o);
                }catch(e){}
            }
        }, timeout);    
        
        return httpRequest;
    };
    parent.webq.tProxyReady("20110331");
</script>


<div id="shanbay_extension_result" class="shanbay_extension_result"><div id="shanbay_extension_result_shanbaydict" class="shanbay_extension_result_engine"><div id="shanbay_extension_result_shanbaydict_caption" class="shanbay_extension_result_caption"></div><div id="shanbay_extension_result_shanbaydict_content" class="shanbay_extension_result_content"></div></div><div id="shanbay_extension_result_googletran" class="shanbay_extension_result_engine"><div id="shanbay_extension_result_googletran_caption" class="shanbay_extension_result_caption"></div><div id="shanbay_extension_result_googletran_content" class="shanbay_extension_result_content"></div></div><div id="shanbay_extension_result_wikizh" class="shanbay_extension_result_engine"><div id="shanbay_extension_result_wikizh_caption" class="shanbay_extension_result_caption"></div><div id="shanbay_extension_result_wikizh_content" class="shanbay_extension_result_content"></div></div><div id="shanbay_extension_result_wikien" class="shanbay_extension_result_engine"><div id="shanbay_extension_result_wikien_caption" class="shanbay_extension_result_caption"></div><div id="shanbay_extension_result_wikien_content" class="shanbay_extension_result_content"></div></div></div></body></html>