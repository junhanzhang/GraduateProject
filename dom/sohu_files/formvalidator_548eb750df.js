kola("util.formvalidator.Core",["util.data.Validator","jquery.Core","mvc.Event","mvc.view.TemplateEngine"],function(Rule,$,Event,TemplateEngine){function Validator(options){var self=this;options=options||{};options=$.extend({triggers:"",rules:{},submitValidate:true},options);$.extend(options,{form:$(options.form),triggers:options.triggers.split("|")});$.extend(self,options);$.extend(self,{submitIntercept:function(){self.submit();return false}});for(var i=0,l=self.triggers.length;i<l;++i){self.addTrigger({trigger:$.trim(self.triggers[i])})}for(var elementName in self.rules){addRuleAndTipByDataValidateTxt(elementName,self.rules[elementName],self)}this.scan();if(options.submitValidate==true){this.form.bind("submit",self.submitIntercept)}}Validator.addRule=function(options){Rule.add({name:options.name,test:options.test})};Validator.onBeforeFieldValidate=function(results){};Validator.onBeforeValidate=function(results){};Validator.onFieldPass=function(results){};Validator.onPass=function(results){};Validator.onFieldNotPass=function(results){};Validator.onNotPass=function(results){};Validator.onFieldValidated=function(results){};Validator.onValidated=function(results){};Validator.onSubmit=function(results){};Validator.prototype.addTrigger=function(options){var self=this;options=options||{};var targetSelector=options.name?":input[name='"+options.name+"']":":input";var targetElement=this.form.find(targetSelector);targetElement.each(function(){var thisElement=$(this);if(RuleTrigger.hasRuleTrigger(thisElement,options.ruleName,options.trigger)==false){RuleTrigger.setRuleTrigger(thisElement,options.ruleName,options.trigger,function(){self.validateField({name:thisElement.attr("name"),ruleName:options.ruleName})})}})};Validator.prototype.removeTrigger=function(options){var self=this;options=options||{};var targetSelector=options.name?":input[name='"+options.name+"']":":input";var targetElement=this.form.find(targetSelector);targetElement.each(function(){RuleTrigger.removeRuleTrigger($(this),options.ruleName,options.trigger)})};Validator.prototype.validate=function(options){options=options||{};options.complete=options.validated||options.complete;var self=this;var nameMap={};var nameArr=[];if(Event.fire("fv_before_validate",{formValidator:self})==false){return}if(Validator.onBeforeValidate({formValidator:self})==false){return}var allInput=this.form.find(":input");allInput.each(function(){var $this=$(this);var name=$this.attr("name");if(name&&name.length>0&&nameMap[name]!=true){nameArr.push(name);nameMap[name]=true}});var validateCount=0;var results={};var focusErrorInput=true;for(var i=0,l=nameArr.length;i<l;++i){(function(index){self.validateField({name:nameArr[index],complete:function(result){results[nameArr[index]]=result;if(focusErrorInput==false){for(var rrn in result){if(result[rrn].pass==false){allInput.filter("[name='"+nameArr[index]+"']:first").trigger("focus");focusErrorInput=true;break}}}if(++validateCount>=l){var eventData={formValidator:self,results:results};var fvValidatedResult=Event.fire("fv_validated",eventData);if(fvValidatedResult!=false){Validator.onValidated(eventData)}if(fvValidatedResult==true){var allPass=true;for(var elementName in results){if(allPass==false){break}var rules=results[elementName];for(var ruleName in rules){if(rules[ruleName].pass==false){allPass=false;break}}}if(allPass==true){if(!options.pass||options.pass(eventData)!=false){if(Event.fire("fv_pass",eventData)!=false){Validator.onPass(eventData)}}}else{if(!options.notPass||options.notPass(eventData)!=false){if(Event.fire("fv_not_pass",eventData)!=false){Validator.onNotPass(eventData)}}}}if(options.complete){options.complete(eventData)}}}})})(i)}};Validator.prototype.validateField=function(options){options=options||{};options.complete=options.validated||options.complete;var self=this;var targetElement=this.form.find(":input[name='"+options.name+"']");var value=null;var kvs=null;var targetElementDom=targetElement.get(0);if(targetElementDom&&targetElementDom.options){var kvsArr=[];for(var i=0,l=targetElementDom.options.length;i<l;++i){var option=targetElementDom.options[i];if(option.selected&&option.value&&option.value.length>0){kvsArr.push(targetElement.attr("name")+"="+option.value)}}kvs=kvsArr.join("&")}else{kvs=targetElement.serialize()}kvs=kvs.replace(/\+/g," ");if(kvs&&kvs.length>0){var kvArr=kvs.split("&");for(var i=0,l=kvArr.length;i<l;++i){var kv=kvArr[i].split("=");if(kv[1]&&kv[1].length>0){if(value==null){value=decodeURIComponent(kv[1])}else{if($.isArray(value)==false){value=[value]}value.push(decodeURIComponent(kv[1]))}}}}var rules=targetElement.data("formvalidator_rules");var disabledRules=targetElement.data("formvalidator_disabled_rules")||{};var disabledRulesAll=targetElement.data("formvalidator_disabled_rules_all");if(rules&&rules.length>0&&disabledRulesAll!=true){var beforeFieldValidate=Event.fire("fv_before_field_validate",{formValidator:self,name:options.name});if(beforeFieldValidate!=false){beforeFieldValidate=Validator.onBeforeFieldValidate({formValidator:self,name:options.name})}else{if(options.complete){options.complete({})}return}if(beforeFieldValidate!=false){var results={};var ruleNum=rules.length;var index=-1;function nextValid(){if(++index>=ruleNum){return}if((options.ruleName!=undefined&&rules[index]!=options.ruleName)||disabledRules[rules[index]]==true){nextValid()}var elementName=targetElement.attr("name");Rule.test({name:rules[index],value:value,other:{elementName:elementName,element:targetElement.get(0)},complete:function(result,data){var errorTipTemplate=self.getErrorTipTemplate({name:elementName,ruleName:rules[index]})||"";TemplateEngine.renderFromSource({source:errorTipTemplate,data:data,complete:function(resultText){if(result!=null){results[rules[index]]={pass:result,data:data,errorTip:$.trim(resultText)}}if((index+1)>=ruleNum||result==false){var eventData={};eventData.results=results;eventData.name=elementName;eventData.formValidator=self;var fvFieldValidatedResult=Event.fire("fv_field_validated",eventData);if(fvFieldValidatedResult==true){Validator.onFieldValidated(eventData)}if(result!=false&&fvFieldValidatedResult==true){if(!options.pass||options.pass(eventData)!=false){if(Event.fire("fv_field_pass",eventData)!=false){Validator.onFieldPass(eventData)}}}else{if(!options.notPass||options.notPass(eventData)!=false){if(Event.fire("fv_field_not_pass",eventData)!=false){Validator.onFieldNotPass(eventData)}}}if(options.complete){options.complete(results)}}else{nextValid()}}})}})}nextValid()}else{if(options.complete){options.complete({})}return}}else{if(options.complete){options.complete({})}}};Validator.prototype.disable=function(options){var selector=options.hasOwnProperty("name")?":input[name='"+options.name+"']":":input";var inputs=this.form.find(selector);disableRuleName(inputs,options.ruleName,true)};Validator.prototype.enable=function(options){var selector=options.hasOwnProperty("name")?":input[name='"+options.name+"']":":input";var inputs=this.form.find(selector);disableRuleName(inputs,options.ruleName,false)};Validator.prototype.submit=function(){var self=this;this.validate({complete:function(result){var results=result.results;for(var elementName in results){var rules=results[elementName];for(var ruleName in rules){if(rules[ruleName].pass==false){return}}}if(Event.fire("fv_submit",result)==true){Validator.onSubmit(result);self.form.unbind("submit",self.submitIntercept);self.form.submit()}}})};Validator.prototype.addRule=function(options){var targetElements=this.form.find(":input[name='"+options.name+"']");targetElements.each(function(){var thisElement=$(this);var curRules=thisElement.data("formvalidator_rules");curRules=curRules||[];if($.inArray(options.ruleName,curRules)==-1){curRules.push(options.ruleName);thisElement.data("formvalidator_rules",curRules)}})};Validator.prototype.removeRule=function(options){var targetElements=this.form.find(":input[name='"+options.name+"']");targetElements.each(function(){var thisElement=$(this);var curRules=thisElement.data("formvalidator_rules");if(curRules){for(var i=curRules.length-1;i>=0;--i){if(curRules[i]==options.ruleName){curRules.splice(i,1);thisElement.data("formvalidator_rules",curRules);return}}}})};Validator.prototype.setErrorTipTemplate=function(options){var self=this;var targetElement=self.form.find(":input[name='"+options.name+"']");var errorTipTemplate=targetElement.data("formvalidator_error_tip_template")||{};errorTipTemplate[options.ruleName]=options.template;targetElement.data("formvalidator_error_tip_template",errorTipTemplate)};Validator.prototype.getErrorTipTemplate=function(options){var self=this;var errorTipTemplate=self.form.find(":input[name='"+options.name+"']").data("formvalidator_error_tip_template");if(errorTipTemplate){var aErrorTipTempalte=errorTipTemplate[options.ruleName];return aErrorTipTempalte?aErrorTipTempalte:null}return null};Validator.prototype.scan=function(){var self=this;var addedMap={};self.form.find(":input").each(function(){var thisElement=$(this);var name=thisElement.attr("name");if(addedMap[name]!=true){var dataValidate=thisElement.attr("data-validate");if(dataValidate&&dataValidate.length>0){addRuleAndTipByDataValidateTxt(name,dataValidate,self);addedMap[name]=true}}})};Validator.prototype.getFormDom=function(){return this.form.get(0)};var REGEXP={EXTRACT_DATA_VALIDATE_CON:/([\w_\|]+)(\s*:\s*('|")(([^\\'\\"]|\\.)+)('|"))?/g};function disableRuleName(elements,ruleName,disable){elements.each(function(){var thisInput=$(this);var disabledRules=thisInput.data("formvalidator_disabled_rules")||{};if(ruleName!=undefined&&ruleName!=null){disabledRules[ruleName]=disable;if(disable==false){thisInput.data("formvalidator_disabled_rules_all",false)}}else{thisInput.data("formvalidator_disabled_rules_all",disable)}})}function addRuleAndTipByDataValidateTxt(name,dvtxt,self){var rules=dvtxt.match(REGEXP.EXTRACT_DATA_VALIDATE_CON);if(rules&&rules.length>0){for(var i=0,l=rules.length;i<l;++i){var ruleName="";var tipTemplate='""';var splitIndex=rules[i].indexOf(":");if(splitIndex!=-1){var rule=rules[i];ruleName=rule.substr(0,splitIndex);tipTemplate=$.trim(rule.substr(splitIndex+1))}else{ruleName=rules[i]}self.addRule({name:name,ruleName:ruleName});self.setErrorTipTemplate({name:name,ruleName:ruleName,template:eval("("+tipTemplate+")")});for(var ii=0,ll=self.triggers.length;ii<ll;++ii){self.addTrigger({name:name,ruleName:ruleName,trigger:$.trim(self.triggers[ii])})}}}}var RuleTrigger={setRuleTrigger:function(element,ruleName,trigger,callback){element.bind(trigger,callback);var curRuleTriggers=element.data("formvalidator_triggers")||{};var finalRuleName=ruleName?ruleName:"@-formvalidator_all_rule";var curTriggers=curRuleTriggers[finalRuleName]||{};curTriggers[trigger]=callback;curRuleTriggers[finalRuleName]=curTriggers;element.data("formvalidator_triggers",curRuleTriggers)},removeRuleTrigger:function(element,ruleName,trigger){var curRuleTriggers=element.data("formvalidator_triggers")||{};var rule=curRuleTriggers[ruleName]||curRuleTriggers["@-formvalidator_all_rule"]||false;if(rule){var checker=rule[trigger];if(checker){delete rule[trigger];element.unbind(trigger,checker)}}var rule=curRuleTriggers["@-formvalidator_all_rule"];if(rule){var checker=rule[trigger];if(checker){delete rule[trigger];element.unbind(trigger,checker)}}},hasRuleTrigger:function(element,ruleName,trigger){var curRuleTriggers=element.data("formvalidator_triggers")||{};var rule=curRuleTriggers[ruleName]||curRuleTriggers["@-formvalidator_all_rule"]||false;if(rule){return rule[trigger]?true:false}return false}};return Validator});